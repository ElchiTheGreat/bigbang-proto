// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: client/client.proto

package client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Command represents a command to be executed by the client
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity  *Identity      `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	CommandId string         `protobuf:"bytes,2,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Type      CommandType    `protobuf:"varint,3,opt,name=type,proto3,enum=client.CommandType" json:"type,omitempty"`
	SubType   SubCommandType `protobuf:"varint,4,opt,name=sub_type,json=subType,proto3,enum=client.SubCommandType" json:"sub_type,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*Command_Deploy
	//	*Command_Service
	//	*Command_UpdateBootstrap
	//	*Command_EnvoyAdmin
	//	*Command_Undeploy
	//	*Command_GeneralLog
	//	*Command_ClientStats
	//	*Command_Network
	//	*Command_Frr
	Payload isCommand_Payload `protobuf_oneof:"payload"`
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_client_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_client_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_client_client_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *Command) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *Command) GetType() CommandType {
	if x != nil {
		return x.Type
	}
	return CommandType_UNKNOWN
}

func (x *Command) GetSubType() SubCommandType {
	if x != nil {
		return x.SubType
	}
	return SubCommandType_SUB_UNKNOWN
}

func (m *Command) GetPayload() isCommand_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Command) GetDeploy() *RequestDeploy {
	if x, ok := x.GetPayload().(*Command_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (x *Command) GetService() *RequestService {
	if x, ok := x.GetPayload().(*Command_Service); ok {
		return x.Service
	}
	return nil
}

func (x *Command) GetUpdateBootstrap() *RequestUpdateBootstrap {
	if x, ok := x.GetPayload().(*Command_UpdateBootstrap); ok {
		return x.UpdateBootstrap
	}
	return nil
}

func (x *Command) GetEnvoyAdmin() *RequestEnvoyAdmin {
	if x, ok := x.GetPayload().(*Command_EnvoyAdmin); ok {
		return x.EnvoyAdmin
	}
	return nil
}

func (x *Command) GetUndeploy() *RequestUnDeploy {
	if x, ok := x.GetPayload().(*Command_Undeploy); ok {
		return x.Undeploy
	}
	return nil
}

func (x *Command) GetGeneralLog() *RequestGeneralLog {
	if x, ok := x.GetPayload().(*Command_GeneralLog); ok {
		return x.GeneralLog
	}
	return nil
}

func (x *Command) GetClientStats() *RequestClientStats {
	if x, ok := x.GetPayload().(*Command_ClientStats); ok {
		return x.ClientStats
	}
	return nil
}

func (x *Command) GetNetwork() *RequestNetwork {
	if x, ok := x.GetPayload().(*Command_Network); ok {
		return x.Network
	}
	return nil
}

func (x *Command) GetFrr() *RequestFrr {
	if x, ok := x.GetPayload().(*Command_Frr); ok {
		return x.Frr
	}
	return nil
}

type isCommand_Payload interface {
	isCommand_Payload()
}

type Command_Deploy struct {
	Deploy *RequestDeploy `protobuf:"bytes,10,opt,name=deploy,proto3,oneof"`
}

type Command_Service struct {
	Service *RequestService `protobuf:"bytes,11,opt,name=service,proto3,oneof"`
}

type Command_UpdateBootstrap struct {
	UpdateBootstrap *RequestUpdateBootstrap `protobuf:"bytes,12,opt,name=update_bootstrap,json=updateBootstrap,proto3,oneof"`
}

type Command_EnvoyAdmin struct {
	EnvoyAdmin *RequestEnvoyAdmin `protobuf:"bytes,13,opt,name=envoy_admin,json=envoyAdmin,proto3,oneof"`
}

type Command_Undeploy struct {
	Undeploy *RequestUnDeploy `protobuf:"bytes,14,opt,name=undeploy,proto3,oneof"`
}

type Command_GeneralLog struct {
	GeneralLog *RequestGeneralLog `protobuf:"bytes,15,opt,name=general_log,json=generalLog,proto3,oneof"`
}

type Command_ClientStats struct {
	ClientStats *RequestClientStats `protobuf:"bytes,16,opt,name=client_stats,json=clientStats,proto3,oneof"`
}

type Command_Network struct {
	Network *RequestNetwork `protobuf:"bytes,17,opt,name=network,proto3,oneof"`
}

type Command_Frr struct {
	Frr *RequestFrr `protobuf:"bytes,18,opt,name=frr,proto3,oneof"`
}

func (*Command_Deploy) isCommand_Payload() {}

func (*Command_Service) isCommand_Payload() {}

func (*Command_UpdateBootstrap) isCommand_Payload() {}

func (*Command_EnvoyAdmin) isCommand_Payload() {}

func (*Command_Undeploy) isCommand_Payload() {}

func (*Command_GeneralLog) isCommand_Payload() {}

func (*Command_ClientStats) isCommand_Payload() {}

func (*Command_Network) isCommand_Payload() {}

func (*Command_Frr) isCommand_Payload() {}

// CommandResponse represents the response to a command
type CommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity  *Identity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	CommandId string    `protobuf:"bytes,2,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Success   bool      `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Error     string    `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Result:
	//
	//	*CommandResponse_Deploy
	//	*CommandResponse_Service
	//	*CommandResponse_UpdateBootstrap
	//	*CommandResponse_EnvoyAdmin
	//	*CommandResponse_Undeploy
	//	*CommandResponse_GeneralLog
	//	*CommandResponse_ClientStats
	//	*CommandResponse_Network
	//	*CommandResponse_Frr
	Result isCommandResponse_Result `protobuf_oneof:"result"`
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	mi := &file_client_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_client_client_proto_rawDescGZIP(), []int{1}
}

func (x *CommandResponse) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *CommandResponse) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (m *CommandResponse) GetResult() isCommandResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CommandResponse) GetDeploy() *ResponseDeploy {
	if x, ok := x.GetResult().(*CommandResponse_Deploy); ok {
		return x.Deploy
	}
	return nil
}

func (x *CommandResponse) GetService() *ResponseService {
	if x, ok := x.GetResult().(*CommandResponse_Service); ok {
		return x.Service
	}
	return nil
}

func (x *CommandResponse) GetUpdateBootstrap() *ResponseUpdateBootstrap {
	if x, ok := x.GetResult().(*CommandResponse_UpdateBootstrap); ok {
		return x.UpdateBootstrap
	}
	return nil
}

func (x *CommandResponse) GetEnvoyAdmin() *ResponseEnvoyAdmin {
	if x, ok := x.GetResult().(*CommandResponse_EnvoyAdmin); ok {
		return x.EnvoyAdmin
	}
	return nil
}

func (x *CommandResponse) GetUndeploy() *ResponseUnDeploy {
	if x, ok := x.GetResult().(*CommandResponse_Undeploy); ok {
		return x.Undeploy
	}
	return nil
}

func (x *CommandResponse) GetGeneralLog() *ResponseGeneralLog {
	if x, ok := x.GetResult().(*CommandResponse_GeneralLog); ok {
		return x.GeneralLog
	}
	return nil
}

func (x *CommandResponse) GetClientStats() *ResponseClientStats {
	if x, ok := x.GetResult().(*CommandResponse_ClientStats); ok {
		return x.ClientStats
	}
	return nil
}

func (x *CommandResponse) GetNetwork() *ResponseNetwork {
	if x, ok := x.GetResult().(*CommandResponse_Network); ok {
		return x.Network
	}
	return nil
}

func (x *CommandResponse) GetFrr() *ResponseFrr {
	if x, ok := x.GetResult().(*CommandResponse_Frr); ok {
		return x.Frr
	}
	return nil
}

type isCommandResponse_Result interface {
	isCommandResponse_Result()
}

type CommandResponse_Deploy struct {
	Deploy *ResponseDeploy `protobuf:"bytes,10,opt,name=deploy,proto3,oneof"`
}

type CommandResponse_Service struct {
	Service *ResponseService `protobuf:"bytes,11,opt,name=service,proto3,oneof"`
}

type CommandResponse_UpdateBootstrap struct {
	UpdateBootstrap *ResponseUpdateBootstrap `protobuf:"bytes,12,opt,name=update_bootstrap,json=updateBootstrap,proto3,oneof"`
}

type CommandResponse_EnvoyAdmin struct {
	EnvoyAdmin *ResponseEnvoyAdmin `protobuf:"bytes,13,opt,name=envoy_admin,json=envoyAdmin,proto3,oneof"`
}

type CommandResponse_Undeploy struct {
	Undeploy *ResponseUnDeploy `protobuf:"bytes,14,opt,name=undeploy,proto3,oneof"`
}

type CommandResponse_GeneralLog struct {
	GeneralLog *ResponseGeneralLog `protobuf:"bytes,15,opt,name=general_log,json=generalLog,proto3,oneof"`
}

type CommandResponse_ClientStats struct {
	ClientStats *ResponseClientStats `protobuf:"bytes,16,opt,name=client_stats,json=clientStats,proto3,oneof"`
}

type CommandResponse_Network struct {
	Network *ResponseNetwork `protobuf:"bytes,17,opt,name=network,proto3,oneof"`
}

type CommandResponse_Frr struct {
	Frr *ResponseFrr `protobuf:"bytes,18,opt,name=frr,proto3,oneof"`
}

func (*CommandResponse_Deploy) isCommandResponse_Result() {}

func (*CommandResponse_Service) isCommandResponse_Result() {}

func (*CommandResponse_UpdateBootstrap) isCommandResponse_Result() {}

func (*CommandResponse_EnvoyAdmin) isCommandResponse_Result() {}

func (*CommandResponse_Undeploy) isCommandResponse_Result() {}

func (*CommandResponse_GeneralLog) isCommandResponse_Result() {}

func (*CommandResponse_ClientStats) isCommandResponse_Result() {}

func (*CommandResponse_Network) isCommandResponse_Result() {}

func (*CommandResponse_Frr) isCommandResponse_Result() {}

var File_client_client_proto protoreflect.FileDescriptor

var file_client_client_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x14, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x05, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12,
	0x32, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x48, 0x00, 0x52,
	0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70,
	0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x35,
	0x0a, 0x08, 0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x00, 0x52, 0x08, 0x75, 0x6e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x4c, 0x6f, 0x67, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x48, 0x00, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x03, 0x66, 0x72, 0x72, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x72, 0x72, 0x48, 0x00, 0x52, 0x03, 0x66, 0x72, 0x72,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa3, 0x05, 0x0a, 0x0f,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x06,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x33,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x48, 0x00,
	0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x36, 0x0a, 0x08, 0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x55, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x48, 0x00, 0x52, 0x08,
	0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x12, 0x3d, 0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x27,
	0x0a, 0x03, 0x66, 0x72, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x72, 0x72,
	0x48, 0x00, 0x52, 0x03, 0x66, 0x72, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0xd9, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x17, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x6c, 0x63, 0x68,
	0x69, 0x54, 0x68, 0x65, 0x47, 0x72, 0x65, 0x61, 0x74, 0x2f, 0x65, 0x6c, 0x63, 0x68, 0x69, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_client_proto_rawDescOnce sync.Once
	file_client_client_proto_rawDescData = file_client_client_proto_rawDesc
)

func file_client_client_proto_rawDescGZIP() []byte {
	file_client_client_proto_rawDescOnce.Do(func() {
		file_client_client_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_client_proto_rawDescData)
	})
	return file_client_client_proto_rawDescData
}

var file_client_client_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_client_client_proto_goTypes = []any{
	(*Command)(nil),                 // 0: client.Command
	(*CommandResponse)(nil),         // 1: client.CommandResponse
	(*Identity)(nil),                // 2: client.Identity
	(CommandType)(0),                // 3: client.CommandType
	(SubCommandType)(0),             // 4: client.SubCommandType
	(*RequestDeploy)(nil),           // 5: client.RequestDeploy
	(*RequestService)(nil),          // 6: client.RequestService
	(*RequestUpdateBootstrap)(nil),  // 7: client.RequestUpdateBootstrap
	(*RequestEnvoyAdmin)(nil),       // 8: client.RequestEnvoyAdmin
	(*RequestUnDeploy)(nil),         // 9: client.RequestUnDeploy
	(*RequestGeneralLog)(nil),       // 10: client.RequestGeneralLog
	(*RequestClientStats)(nil),      // 11: client.RequestClientStats
	(*RequestNetwork)(nil),          // 12: client.RequestNetwork
	(*RequestFrr)(nil),              // 13: client.RequestFrr
	(*ResponseDeploy)(nil),          // 14: client.ResponseDeploy
	(*ResponseService)(nil),         // 15: client.ResponseService
	(*ResponseUpdateBootstrap)(nil), // 16: client.ResponseUpdateBootstrap
	(*ResponseEnvoyAdmin)(nil),      // 17: client.ResponseEnvoyAdmin
	(*ResponseUnDeploy)(nil),        // 18: client.ResponseUnDeploy
	(*ResponseGeneralLog)(nil),      // 19: client.ResponseGeneralLog
	(*ResponseClientStats)(nil),     // 20: client.ResponseClientStats
	(*ResponseNetwork)(nil),         // 21: client.ResponseNetwork
	(*ResponseFrr)(nil),             // 22: client.ResponseFrr
	(*RegisterRequest)(nil),         // 23: client.RegisterRequest
	(*UnregisterRequest)(nil),       // 24: client.UnregisterRequest
	(*RegisterResponse)(nil),        // 25: client.RegisterResponse
	(*UnregisterResponse)(nil),      // 26: client.UnregisterResponse
}
var file_client_client_proto_depIdxs = []int32{
	2,  // 0: client.Command.identity:type_name -> client.Identity
	3,  // 1: client.Command.type:type_name -> client.CommandType
	4,  // 2: client.Command.sub_type:type_name -> client.SubCommandType
	5,  // 3: client.Command.deploy:type_name -> client.RequestDeploy
	6,  // 4: client.Command.service:type_name -> client.RequestService
	7,  // 5: client.Command.update_bootstrap:type_name -> client.RequestUpdateBootstrap
	8,  // 6: client.Command.envoy_admin:type_name -> client.RequestEnvoyAdmin
	9,  // 7: client.Command.undeploy:type_name -> client.RequestUnDeploy
	10, // 8: client.Command.general_log:type_name -> client.RequestGeneralLog
	11, // 9: client.Command.client_stats:type_name -> client.RequestClientStats
	12, // 10: client.Command.network:type_name -> client.RequestNetwork
	13, // 11: client.Command.frr:type_name -> client.RequestFrr
	2,  // 12: client.CommandResponse.identity:type_name -> client.Identity
	14, // 13: client.CommandResponse.deploy:type_name -> client.ResponseDeploy
	15, // 14: client.CommandResponse.service:type_name -> client.ResponseService
	16, // 15: client.CommandResponse.update_bootstrap:type_name -> client.ResponseUpdateBootstrap
	17, // 16: client.CommandResponse.envoy_admin:type_name -> client.ResponseEnvoyAdmin
	18, // 17: client.CommandResponse.undeploy:type_name -> client.ResponseUnDeploy
	19, // 18: client.CommandResponse.general_log:type_name -> client.ResponseGeneralLog
	20, // 19: client.CommandResponse.client_stats:type_name -> client.ResponseClientStats
	21, // 20: client.CommandResponse.network:type_name -> client.ResponseNetwork
	22, // 21: client.CommandResponse.frr:type_name -> client.ResponseFrr
	23, // 22: client.CommandService.Register:input_type -> client.RegisterRequest
	24, // 23: client.CommandService.Unregister:input_type -> client.UnregisterRequest
	1,  // 24: client.CommandService.CommandStream:input_type -> client.CommandResponse
	25, // 25: client.CommandService.Register:output_type -> client.RegisterResponse
	26, // 26: client.CommandService.Unregister:output_type -> client.UnregisterResponse
	0,  // 27: client.CommandService.CommandStream:output_type -> client.Command
	25, // [25:28] is the sub-list for method output_type
	22, // [22:25] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_client_client_proto_init() }
func file_client_client_proto_init() {
	if File_client_client_proto != nil {
		return
	}
	file_client_request_proto_init()
	file_client_response_proto_init()
	file_client_identity_proto_init()
	file_client_register_proto_init()
	file_client_commands_proto_init()
	file_client_subcommands_proto_init()
	file_client_client_proto_msgTypes[0].OneofWrappers = []any{
		(*Command_Deploy)(nil),
		(*Command_Service)(nil),
		(*Command_UpdateBootstrap)(nil),
		(*Command_EnvoyAdmin)(nil),
		(*Command_Undeploy)(nil),
		(*Command_GeneralLog)(nil),
		(*Command_ClientStats)(nil),
		(*Command_Network)(nil),
		(*Command_Frr)(nil),
	}
	file_client_client_proto_msgTypes[1].OneofWrappers = []any{
		(*CommandResponse_Deploy)(nil),
		(*CommandResponse_Service)(nil),
		(*CommandResponse_UpdateBootstrap)(nil),
		(*CommandResponse_EnvoyAdmin)(nil),
		(*CommandResponse_Undeploy)(nil),
		(*CommandResponse_GeneralLog)(nil),
		(*CommandResponse_ClientStats)(nil),
		(*CommandResponse_Network)(nil),
		(*CommandResponse_Frr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_client_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_client_proto_goTypes,
		DependencyIndexes: file_client_client_proto_depIdxs,
		MessageInfos:      file_client_client_proto_msgTypes,
	}.Build()
	File_client_client_proto = out.File
	file_client_client_proto_rawDesc = nil
	file_client_client_proto_goTypes = nil
	file_client_client_proto_depIdxs = nil
}
